fiëé croisée
============

I like making crossword puzzles. But it needs *a lot* of time without the right tools. 

So this is some kind of dictionary to look for matching words. At the moment.

I hope it will become a tool that makes creating crossword puzzles just fun.


Installation
------------

It's a Django application.

The provided fabfile (fabric deployment) is for an Debian server 
and documented in this gist: http://gist.github.com/158177


Make a dictionary
-----------------

* get some long text, e.g. from Project Gutenberg
* save it in UTF-8 encoding
* run `make-wordlist.py` on it
* upload the resulting wordlist to your croisee installation (Wordlist Upload); that may take a while
* fix the descriptions and priorities, if you like

You can also write your own wordlist, it's just a text file (utf-8) with one word per line.
You can add description and priority behind tabs, i.e.

    word	description	-1


Roadmap
-------

I'm planning to implement the following features in about this order:

* cloze/wildcard search (e.g. search for ?Y??O%)
* select dictionaries
* puzzle GUI (make grid of 20x10, fill-in grid, block cells)
* search-in-grid (place cursor, find matching words in both directions)
* export grid and solution as text / HTML / TeX
* import text files
* export as PDF
* different types of crossword grids (fat lines instead of blocked cells, uneven outline...)
* automate filling the grid
* set up a paid service
* get rich ;-)

And on the way:

* enhance the dictionaries (at least for German, possibly English)


License
-------

GPLv3, see http://www.gnu.org/copyleft/gpl.html

Feel free to ask after different, additional licensing.


Author(s)
---------

* Henning Hraban Ramm, fiëé visuëlle, <hraban@fiee.net>, http://www.fiee.net
* inspiration and code snippets by several other people & projects


Dependencies
------------

* Python 2.5+
* Django 1.0+
* Fabric 0.9+ (optional, for easy deployment)
